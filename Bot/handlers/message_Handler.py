from telegram import Update
from telegram.ext import ContextTypes

from Bot.bot_QA_Logger import log_command
from logging_project.metrics import track_command, track_response_time


async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):

    query = update.callback_query
    await query.answer()

    category_map = {
        "manual": "üìå Manual QA ‚Äî —Å—Ç–∞—Ç—å–∏ –æ —Ä—É—á–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.",
        "automation": "ü§ñ Automation QA ‚Äî —Å—Ç–∞—Ç—å–∏ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
        "tools": "üõ† –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî Postman, Selenium, JMeter –∏ –¥—Ä—É–≥–∏–µ.",
        "methodologies": "üìö –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ ‚Äî Agile, Scrum, Waterfall.",
        "qaq": "‚ùì QAQ ‚Äî –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è.",
        "checklists": "‚úÖ –ß–µ–∫-–ª–∏—Å—Ç—ã ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.",
        "security": "üîí Security Testing ‚Äî —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    }
    with track_response_time(query.data):
        reply_text = category_map.get(query.data, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è")
        await query.edit_message_text(text=reply_text)
        log_command(update, reply_text)
        track_command(query.data)