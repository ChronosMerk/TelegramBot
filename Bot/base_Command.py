from config import config
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from bot_QA_Logger import log_command, starting_bot
from message_Handler import button_handler
from Bot.metrics import track_command, track_response_time
from Ai.GPT import handle_gpt

class QABot:
    """–ö–ª–∞—Å—Å Telegram-–±–æ—Ç–∞ –¥–ª—è QA"""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.application = ApplicationBuilder().token(config.tokenTG).build()
        self.setup_handlers()

    def setup_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler('start', self.start))
        self.application.add_handler(CommandHandler('help', self.help))
        self.application.add_handler(CommandHandler('categories', self.categories))
        #self.application.add_handler(CommandHandler('deepseek ', self.deepseek))
        self.application.add_handler(CommandHandler('gpt', handle_gpt))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        self.application.add_handler(CallbackQueryHandler(button_handler))

        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏!)
        self.application.add_handler(MessageHandler(filters.COMMAND, self.unknown_message))
        self.application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), self.unknown_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    @staticmethod
    async def unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
        with track_response_time(update.message.text):
            reply_message = "–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É."

            await update.message.reply_text(reply_message)
            log_command(update, reply_message)
            track_command("unknown")

    @staticmethod
    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        with track_response_time(update.message.text):
            user = update.message
            reply_message = f"–ü—Ä–∏–≤–µ—Ç, {user.from_user.first_name}! –Ø QA-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∏–∑—É—á–∏—Ç—å QA!"

            await update.message.reply_text(reply_message)
            log_command(update, reply_message)
            track_command(update.message.text)

    @staticmethod
    async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        with track_response_time(update.message.text):
            reply_message = "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: \n/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞. \n/help ‚Äî –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥. \n/categories ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´Manual QA¬ª, ¬´Automation QA¬ª, ¬´–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã¬ª, ¬´–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏¬ª, ¬´QAQ¬ª –∏ —Ç.–¥.)."

            await update.message.reply_text(reply_message)
            log_command(update,reply_message)
            track_command(update.message.text)

    @staticmethod
    async def categories(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /categories"""
        with track_response_time(update.message.text):
            keyboard = [
                [InlineKeyboardButton("üìå Manual QA", callback_data="manual")],
                [InlineKeyboardButton("ü§ñ Automation QA", callback_data="automation")],
                [InlineKeyboardButton("üõ† –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", callback_data="tools")],
                [InlineKeyboardButton("üìö –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏", callback_data="methodologies")],
                [InlineKeyboardButton("‚ùì QAQ", callback_data="qaq")],
                [InlineKeyboardButton("‚úÖ –ß–µ–∫-–ª–∏—Å—Ç—ã", callback_data="checklists")],
                [InlineKeyboardButton("üîí Security Testing", callback_data="security")],
            ]

            reply_message = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text("üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç–∞—Ç–µ–π:", reply_markup=reply_message)
            log_command(update, reply_message)
            track_command(update.message.text)

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        starting_bot(__name__)
        self.application.run_polling()
