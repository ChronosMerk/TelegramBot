from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from bot_QA_Logger import logger

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%s) –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É %s', user.username, user.id, text)
    reply_message = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø QA-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∏–∑—É—á–∏—Ç—å QA! –î–ª—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help –í —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    await update.message.reply_text(reply_message)

    logger.info('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s (%s): "%s"', user.username, user.id, reply_message)

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%s) –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É %s', user.username, user.id, text)
    reply_message = "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: \n/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞. \n/help ‚Äî –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥. \n/categories ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´Manual QA¬ª, ¬´Automation QA¬ª, ¬´–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã¬ª, ¬´–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏¬ª, ¬´QAQ¬ª –∏ —Ç.–¥.)."
    await  update.message.reply_text(reply_message)

    logger.info('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s (%s): "%s"', user.username, user.id, reply_message)

async def categories(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    keyboard = [
        [InlineKeyboardButton("üìå Manual QA", callback_data="manual")],
        [InlineKeyboardButton("ü§ñ Automation QA", callback_data="automation")],
        [InlineKeyboardButton("üõ† –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", callback_data="tools")],
        [InlineKeyboardButton("üìö –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏", callback_data="methodologies")],
        [InlineKeyboardButton("‚ùì QAQ", callback_data="qaq")],
        [InlineKeyboardButton("‚úÖ –ß–µ–∫-–ª–∏—Å—Ç—ã", callback_data="checklists")],
        [InlineKeyboardButton("üîí Security Testing", callback_data="security")],
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (%s) –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É %s', user.username, user.id, text)
    await  update.message.reply_text("üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç–∞—Ç–µ–π:", reply_markup=reply_markup)
    logger.info('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s (%s): "%s"', user.username, user.id, reply_markup)